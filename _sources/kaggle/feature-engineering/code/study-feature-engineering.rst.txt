about feature engineering
=============================================

*特徴量エンジニアリング*

.. sidebar:: 目次

   .. contents::
       :depth: 3
       :local:


Adversarial Validation
---------------------------------------

Public LB にもとづいてモデルの良し悪しを評価すると、Private LB で大きく順位が下がることがある。
この現象は、Public LB の評価で用いられる一部のデータに対して、モデルが過剰適合した状態
これを防ぐには、Cross Validation (交差検証) などを用いたローカルでの汎化性能の評価 (Local CV) が重要
この問題を解決するために考案されたAdversarial Validation
どちらのデータセットに由来するデータなのかという情報を目的変数として付与する。
例えば学習用データが全て 0 で検証用データは全て 1 といった形で付与する。
そして、学習用データと検証用データを混ぜた状態で、両者がどちらに由来するものなのかを予測するモデルを作る。
学習用データと検証用データの分布が異なるほど、どちらに由来するかの予測は容易になる。
もし、全く同じ分布から得られたデータなのであれば、両者を区別することはそもそもできない。
この時点で、学習用データと検証用データの分布がどれくらい異なるのかが分かる。
もし分布が異なるのであれば、学習用データのサブセットを作ることになる。
サブセットを作る上での基準は、検証用データにより近いデータかどうか。
これは、先ほど確認した内容にもとづいて作成する。
つまり、学習用データの中から、検証用データと判断が難しかったものを選び出す。
具体的には、検証用データかどうかの確率を降順ソートして上から取り出せば良い。
その基準で取り出した学習用データのサブセットを使って Local CV することで、
Public LB / Private LB との相関が改善する。 以上が Adversarial Validation という手法の説明になる。

Adversarial Validation Test
---------------------------------------

.. toctree::
    adversarial-validation

+ Adversarial ModelのAUCから過学習のリスクを見積もる
+ Adversarial Modelの予測値がテスト寄りの訓練データを使ってLocalValidationを行う
+ Adversarial Modelが誤分類したデータを重視してEnsemble Weightを決める
+ Adversarial Modelが誤分類したデータを重視してEnsemble Weightを決める

.. toctree::
    2-months-train-1-month-public-1-day-private

Target Encoding
-----------------

カテゴリ変数を、そのカテゴリにおける目的変数の平均値で置き換える。
そのまま使うとリークしてしまうので、実装にひと工夫が必要
例: Out-Of-Fold予測値を使う、事例数に応じて全体と加重平均 (Weight of Evidence)

どんな時に有効？
カテゴリ変数の水準数がそれなりに多い場合
Train/Test間であまり分布に差が無いと期待できる場合
…とはいえ、大抵やってみないと分からない

.. warning::
    カテゴリ変数をTargetの期待値に変
    換しているので、期待値がドリフト
    する問題設定では素朴なTarget
    Encodingは有害 (例: Microsoft Malware Prediction)

テーブル間の集約
-----------------

テーブルが複数ある場合に、様々な集約関
数(min, max, sum, mean, std…)を使って情報
を目的変数がいるテーブルに集める。
これ自体は基本的だが、集約する際に色々
な条件を組み合わせると多数のバリエー
ションを生成することができる。
マーケティング系だと実務でも良くあるはず

.. note::
    SQLでいうWhere句を色々使う

例）HomeCredit Default Risk
    * ローンの申し込みに対して、デフォルト（貸し倒れ）のリスクを推定する
    * 申し込み1件に対して、同じ人の過去の申し込み履歴のテーブルがN件ある

・色々なローン種別、審査結果が1テーブルに積まれており、これらを切り口
に集約することで多様な意味合いの情報を抽出できた
例）直近1年の審査拒否回数、直近5回のキャッシュローンの総借入額

どんな時に有効？
    トランザクション側の情報が多い場合
    特にカテゴリ変数やタイムスタンプを含む場合

テーブル内の集約
---------------------

1テーブルしか無い場合でも、カテゴリ変数やその組み合わせの値が同じも
の同士で統計量を取ることで、色々な特徴量を作ることができる。

例）TalkingData AdTracking Fraud Detection
    ・クリックログから、Appダウンロードの有無を予測するタスク
    ・ip/app/device/os/channelという5つのカテゴリ特徴
    ・この組み合わせでcount, cumcount等を集計する
    ・次の6時間でのcountといった切り方も有効

どんな時に有効？
    ビジネス的に重要な数値特徴量が分かっている場合
    タイムスタンプ or それに相当する列がある場合

.. note::
    Avito: priceが重要だった
    ので、様々なカテゴリ単位
    でpriceの平均や最大を取
    るのが効いていた

.. note::
    近い時間や同じ時間で
    Group-Byした統計量が使
    えそう。

四則演算
-----------

四則演算、特に特徴量間の差や比率が精度向上につながるケースがある。

    →GBDTは差や比率を直接表現できない

網羅的にやっても良いが、ビジネス的に意味がある量を作ることで精度を上
げている事例が多い印象。
元々ある特徴量同士だけでなく、「元の値と集約値の差」といったパターン
も頻出。

例）HomeCredit Default Risk
    「借入額と毎月の返済額の比」「利用限度額と月々の利用額の比」「支払い
    予定日と実際の支払日の日数差」「借入額と頭金の比率」など、ビジネス的
    に意味がありそうな組み合わせが実際に効いていた

例）Avito Demand Prediction
    オンライン商品広告の需要予測。商品名、商品
    写真、分類名、価格、説明文等が与えられた
    Multimodalタスク
    「同一カテゴリ内の平均価格と自分の価格との
    差/比」を色々なカテゴリ（商品分類、地域な
    ど）で算出するのが効果的だった。

.. note::
    たとえば「iPhoneの中で
    は安い」といった特徴を表
    現しているイメージ

例）Avito Demand Prediction
    さらに4位解法(link)によれば、「商品名の中の
    名詞」でグループ化した価格平均を使った特徴
    量が劇的に効いた。
    Avitoのサイトから名詞をキーワードに検索を
    かけ、価格順にソートして上から見るような
    ユーザーの振る舞いをReverse Engineeringし
    ている意味合いになる、という考察がなされて
    いた。

例）Microsoft Malware Prediction
    * インストールされたマルウェア対策ソフトのバージョンに関するカテゴリ変数が2つ存在(大きい値＝新しいバージョン)
    * どちらのバージョン番号もTrain/Testで大きく異なる値を取っている
    * Testのほうが新しいデータ→ソフトが更新されているため
    * そのまま特徴量に使うことは事実上できない

片方のバージョン番号を固定してもう片方のバージョ
ン番号の分布を見ると、必ず一定の範囲に収まる。
「Version-Aが同一なデータ間での最新のVersion-B」
と、自分自身のVersion-Bのバージョン数の差が有効
だった(6th place solution)

出典: https://www.kaggle.com/c/microsoft-malware-prediction/discussion/84069

.. note::
    ある時点のユーザー群の中で、相対的
    に何バージョン分古いマルウェア対策
    ソフトを使っているか、という意味合
    いに近いと推測。

どんな時に有効？
(特にコンペを選ばない印象だが、強いて挙げるなら)
物理量や意味が明確な数値列が多数ある場合

.. note::
    差や割り算が効くのは、同一単
    位系の量同士のことが多い

個人的には、とりあえずpairplot
等で散布図を見て、比例に近そ
うな量的変数間で比を取る…み
たいなアプローチをとることも
あります

Sub-Modelによる特徴量 1) 重要な特徴量の予測
---------------------------------------------

Sub-Model=本来のタスク以外をターゲットに学習したモデルを使って特徴
量を作る。
代表的なのが、重要な特徴量の値を予測するモデルを作り、Out-of-Foldの
予測値を特徴量に加える方法。

例）Home Credit Default Risk
    過去のローン履歴では各ローンの利率を算出できるが、予測対象のローンで
    は（列が足りず）算出できない。利率は銀行から見た申込者に対する一種の
    リスク評価値とみなすことができ、重要な特徴量だと考えられた。
    →そこで、過去の履歴情報を使って、今回のローン申し込みの利率を予測するモデルを作成。予測値を特徴量に加えた。 (2nd place, 5th place他)

例）Avito Demand Prediction
    ラベル付きデータの他に、同じ期間の広告のラベル無しデータが主催者から
    提供。
    →ラベル無しデータを使うことで、価格予測モデルを作成できた。価格予測モデルが算出した予測値と実際の価格の差を算出することで、一種の「お得度合い」のような特徴量を作ることができた。(1st place)
    → Sub-Model + 差の組み合わせ

.. note::
    先ほどの「カテゴリ内平均と
    の差」と、考え方は非常に近
    い。推定値をMLベースで求め
    るか、単純な統計量で求める
    かの違い。

例）PLAsTiCC Astronomical Classification
    天体望遠鏡が観測した変光(Variables)から、その正体を分類するタスク。
    時系列観測データと、距離や方角などのメタデータが与えられた。
    メタデータに天体までの距離情報が2種類含まれ、これが非常に重要だった。
    距離A: 精度が低い。全データに値が入っている。
    距離B: 精度が高いが、大半のテストデータで値が欠損。
    →距離Bを予測するモデルを作成し、直接特徴量に加えたり、見かけの明る
    さと距離から光度を計算したりした(2nd, 3rd, 4th place solution)

どんな時に有効？
    重要な特徴量の一部または全部が欠損しているとき
    大量のラベル無しデータが利用できるとき

Sub-Modelによる特徴量 2) Transacitonレベルの予測
--------------------------------------------------

目的変数をトランザクションにJoinし、そちらで作ったモデルの予測値を特
徴量として元のテーブルに戻す。

+ 目的変数をトランザクション
    側にJoinし、トランザクション
    単位でモデリング
    ※同一IDに由来する行は同一Fold
    で学習する

+ トランザクション側の予測
    値の各種統計量を、元のテーブ
    ルに特徴量として加える

Q: これは何をやっているの？

A: 単純な集計では失われるようなトランザクション側の情報を、Sub-Modelを介
して拾っていると考えられる

    →例えばトランザクション側のカテゴリ変数間に交互作用がある場合

どんな時に有効？
    トランザクション側に多数の列があるとき

その他の特徴量
----------------

他にも、コンペによって色々な特徴量が使われている。
* 行内でのヒストグラム特徴量 (Santander 1st)
* Gaussian Processでのフィッティング＋各種統計量 (PLAsTiCC 1st)
* カテゴリ間の共起行列からのLDA (TalkingData 1st)
* 特徴量が似た近傍500点での目的変数の平均値 (HomeCredit 1st)

実際に参加した上で上位者の解法を読むと、ぐっと理解が深まる。

実務に近い問題設定のコンペに参加してみると、仕事にも役立つかも。

Link(参考リンク・jupyterリンク等)
---------------------------------------

https://www.slideshare.net/mlm_kansai/kaggle-138546659?from_action=save

https://blog.amedama.jp/entry/adversarial-validation

https://www.kaggle.com/rquintino/2-months-train-1-month-public-1-day-private