第6章: 英語テキストの処理
=============================


英語のテキスト（nlp.txt）に対して，以下の処理を実行せよ．

50. 文区切り
----------------------------------------

(. or ; or : or ? or !) → 空白文字 → 英大文字というパターンを文の区切りと見なし，入力された文書を1行1文の形式で出力せよ．

.. toctree::
	code/nlp100_50_1

51. 単語の切り出し
----------------------------------------

空白を単語の区切りとみなし，50の出力を入力として受け取り，1行1単語の形式で出力せよ．ただし，文の終端では空行を出力せよ．

.. toctree::
	code/nlp100_51_1

52. ステミング
----------------------------------------

51の出力を入力として受け取り，Porterのステミングアルゴリズムを適用し，単語と語幹をタブ区切り形式で出力せよ． Pythonでは，Porterのステミングアルゴリズムの実装としてstemmingモジュールを利用するとよい．

.. toctree::
	code/nlp100_52_1

53. Tokenization
----------------------------------------

Stanford Core NLPを用い，入力テキストの解析結果をXML形式で得よ．また，このXMLファイルを読み込み，入力テキストを1行1単語の形式で出力せよ．

.. toctree::
	code/nlp100_53_1

54. 品詞タグ付け
----------------------------------------

Stanford Core NLPの解析結果XMLを読み込み，単語，レンマ，品詞をタブ区切り形式で出力せよ．

.. toctree::
	code/nlp100_54_1

55. 固有表現抽出
----------------------------------------

入力文中の人名をすべて抜き出せ．

.. toctree::
	code/nlp100_55_1

56. 共参照解析
----------------------------------------

Stanford Core NLPの共参照解析の結果に基づき，文中の参照表現（mention）を代表参照表現（representative mention）に置換せよ．ただし，置換するときは，「代表参照表現（参照表現）」のように，元の参照表現が分かるように配慮せよ．

.. toctree::
	code/nlp100_56_1

57. 係り受け解析
----------------------------------------

Stanford Core NLPの係り受け解析の結果（collapsed-dependencies）を有向グラフとして可視化せよ．可視化には，係り受け木をDOT言語に変換し，Graphvizを用いるとよい．また，Pythonから有向グラフを直接的に可視化するには，pydotを使うとよい．

.. toctree::
	code/nlp100_57_1

58. タプルの抽出
----------------------------------------

Stanford Core NLPの係り受け解析の結果（collapsed-dependencies）に基づき，「主語 述語 目的語」の組をタブ区切り形式で出力せよ．ただし，主語，述語，目的語の定義は以下を参考にせよ．

述語: nsubj関係とdobj関係の子（dependant）を持つ単語

主語: 述語からnsubj関係にある子（dependent）

目的語: 述語からdobj関係にある子（dependent）

.. toctree::
	code/nlp100_58_1

59. S式の解析
----------------------------------------

Stanford Core NLPの句構造解析の結果（S式）を読み込み，文中のすべての名詞句（NP）を表示せよ．入れ子になっている名詞句もすべて表示すること．

.. toctree::
	code/nlp100_59_1

